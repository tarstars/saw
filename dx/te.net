//
// time: Mon Feb 17 10:48:05 2014
//
// version: 3.2.0 (format), 4.4.4 (DX)
//
//
// MODULE main
// workspace: width = 1197, height = 776
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 154, y = 111, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home/tass/2014/dx/te/te_pol_1.dx"
    // output[2]: visible = 1, type = 32, value = "te_pol_1.dx"
    //
    // 
    // node Import[1]: x = 158, y = 227, inputs = 6, label = Import
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node AutoGlyph[2]: x = 165, y = 499, inputs = 7, label = AutoGlyph
    // input[6]: defaulting = 0, visible = 0, type = 5, value = -1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.0
    //
main_AutoGlyph_2_out_1 = 
    AutoGlyph(
    main_Import_1_out_1,
    main_AutoGlyph_2_in_2,
    main_AutoGlyph_2_in_3,
    main_AutoGlyph_2_in_4,
    main_AutoGlyph_2_in_5,
    main_AutoGlyph_2_in_6,
    main_AutoGlyph_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node FileSelector[2]: x = 419, y = 104, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home/tass/2014/dx/te/te_pol_2.dx"
    // output[2]: visible = 1, type = 32, value = "te_pol_2.dx"
    //
    // 
    // node Import[2]: x = 423, y = 220, inputs = 6, label = Import
    //
main_Import_2_out_1 = 
    Import(
    main_FileSelector_2_out_1,
    main_Import_2_in_2,
    main_Import_2_in_3,
    main_Import_2_in_4,
    main_Import_2_in_5,
    main_Import_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node AutoGlyph[3]: x = 498, y = 464, inputs = 7, label = AutoGlyph
    // input[6]: defaulting = 0, visible = 0, type = 5, value = -1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.0
    //
main_AutoGlyph_3_out_1 = 
    AutoGlyph(
    main_Import_2_out_1,
    main_AutoGlyph_3_in_2,
    main_AutoGlyph_3_in_3,
    main_AutoGlyph_3_in_4,
    main_AutoGlyph_3_in_5,
    main_AutoGlyph_3_in_6,
    main_AutoGlyph_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node FileSelector[3]: x = 686, y = 113, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home/tass/2014/dx/te/te_pol_3.dx"
    // output[2]: visible = 1, type = 32, value = "te_pol_3.dx"
    //
    // 
    // node Import[3]: x = 690, y = 233, inputs = 6, label = Import
    //
main_Import_3_out_1 = 
    Import(
    main_FileSelector_3_out_1,
    main_Import_3_in_2,
    main_Import_3_in_3,
    main_Import_3_in_4,
    main_Import_3_in_5,
    main_Import_3_in_6
    ) [instance: 3, cache: 1];
    // 
    // node AutoGlyph[4]: x = 697, y = 484, inputs = 7, label = AutoGlyph
    // input[6]: defaulting = 0, visible = 0, type = 5, value = -1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.0
    //
main_AutoGlyph_4_out_1 = 
    AutoGlyph(
    main_Import_3_out_1,
    main_AutoGlyph_4_in_2,
    main_AutoGlyph_4_in_3,
    main_AutoGlyph_4_in_4,
    main_AutoGlyph_4_in_5,
    main_AutoGlyph_4_in_6,
    main_AutoGlyph_4_in_7
    ) [instance: 4, cache: 1];
    // 
    // node Compute[2]: x = 76, y = 352, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "-$0"
    // expression: value = -a
    // name[2]: value = a
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Import_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node AutoGlyph[5]: x = 91, y = 423, inputs = 7, label = AutoGlyph
    // input[6]: defaulting = 0, visible = 0, type = 5, value = -1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.0
    //
main_AutoGlyph_5_out_1 = 
    AutoGlyph(
    main_Compute_2_out_1,
    main_AutoGlyph_5_in_2,
    main_AutoGlyph_5_in_3,
    main_AutoGlyph_5_in_4,
    main_AutoGlyph_5_in_5,
    main_AutoGlyph_5_in_6,
    main_AutoGlyph_5_in_7
    ) [instance: 5, cache: 1];
    // 
    // node Compute[3]: x = 343, y = 345, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "-$0"
    // expression: value = -a
    // name[2]: value = a
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Import_2_out_1
    ) [instance: 3, cache: 1];
    // 
    // node AutoGlyph[6]: x = 358, y = 416, inputs = 7, label = AutoGlyph
    // input[6]: defaulting = 0, visible = 0, type = 5, value = -1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.0
    //
main_AutoGlyph_6_out_1 = 
    AutoGlyph(
    main_Compute_3_out_1,
    main_AutoGlyph_6_in_2,
    main_AutoGlyph_6_in_3,
    main_AutoGlyph_6_in_4,
    main_AutoGlyph_6_in_5,
    main_AutoGlyph_6_in_6,
    main_AutoGlyph_6_in_7
    ) [instance: 6, cache: 1];
    // 
    // node Compute[4]: x = 628, y = 339, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "-$0"
    // expression: value = -a
    // name[2]: value = a
    //
main_Compute_4_out_1 = 
    Compute(
    main_Compute_4_in_1,
    main_Import_3_out_1
    ) [instance: 4, cache: 1];
    // 
    // node AutoGlyph[7]: x = 643, y = 410, inputs = 7, label = AutoGlyph
    // input[6]: defaulting = 0, visible = 0, type = 5, value = -1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.0
    //
main_AutoGlyph_7_out_1 = 
    AutoGlyph(
    main_Compute_4_out_1,
    main_AutoGlyph_7_in_2,
    main_AutoGlyph_7_in_3,
    main_AutoGlyph_7_in_4,
    main_AutoGlyph_7_in_5,
    main_AutoGlyph_7_in_6,
    main_AutoGlyph_7_in_7
    ) [instance: 7, cache: 1];
    // 
    // node FileSelector[4]: x = 968, y = 82, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home/tass/2014/dx/coordinate_system.dx"
    // output[2]: visible = 1, type = 32, value = "coordinate_system.dx"
    //
    // 
    // node Import[4]: x = 973, y = 157, inputs = 6, label = Import
    //
main_Import_4_out_1 = 
    Import(
    main_FileSelector_4_out_1,
    main_Import_4_in_2,
    main_Import_4_in_3,
    main_Import_4_in_4,
    main_Import_4_in_5,
    main_Import_4_in_6
    ) [instance: 4, cache: 1];
    // 
    // node Normals[4]: x = 995, y = 226, inputs = 2, label = Normals
    //
main_Normals_4_out_1 = 
    Normals(
    main_Import_4_out_1,
    main_Normals_4_in_2
    ) [instance: 4, cache: 1];
    // 
    // node Select[1]: x = 913, y = 337, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "x bar"
    //
main_Select_1_out_1 = 
    Select(
    main_Normals_4_out_1,
    main_Select_1_in_2,
    main_Select_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 914, y = 418, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [1 0.5 0]
    //
main_Color_1_out_1 = 
    Color(
    main_Select_1_out_1,
    main_Color_1_in_2,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Select[2]: x = 1023, y = 335, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "y bar"
    //
main_Select_2_out_1 = 
    Select(
    main_Normals_4_out_1,
    main_Select_2_in_2,
    main_Select_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Color[2]: x = 1020, y = 421, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0 1 0]
    //
main_Color_2_out_1 = 
    Color(
    main_Select_2_out_1,
    main_Color_2_in_2,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Select[3]: x = 1128, y = 342, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "z bar"
    //
main_Select_3_out_1 = 
    Select(
    main_Normals_4_out_1,
    main_Select_3_in_2,
    main_Select_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Color[3]: x = 1125, y = 427, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0 0 1]
    //
main_Color_3_out_1 = 
    Color(
    main_Select_3_out_1,
    main_Color_3_in_2,
    main_Color_3_in_3,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Collect[1]: x = 1002, y = 524, inputs = 3, label = Collect
    //
main_Collect_1_out_1 = 
    Collect(
    main_Color_1_out_1,
    main_Color_2_out_1,
    main_Color_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Color[4]: x = 210, y = 306, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [1 0 0]
    //
main_Color_4_out_1 = 
    Color(
    main_Import_1_out_1,
    main_Color_4_in_2,
    main_Color_4_in_3,
    main_Color_4_in_4,
    main_Color_4_in_5
    ) [instance: 4, cache: 1];
    // 
    // node Normals[1]: x = 251, y = 413, inputs = 2, label = Normals
    //
main_Normals_1_out_1 = 
    Normals(
    main_Color_4_out_1,
    main_Normals_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Scale[1]: x = 1062, y = 600, inputs = 2, label = Scale
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0.0002 0.0002 0.0002]
    //
main_Scale_1_out_1 = 
    Scale(
    main_Collect_1_out_1,
    main_Scale_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Compute[1]: x = 991, y = 717, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0"
    // expression: value = a
    // name[2]: value = a
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Scale_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Collect[2]: x = 227, y = 588, inputs = 4, label = Collect
    //
main_Collect_2_out_1 = 
    Collect(
    main_AutoGlyph_5_out_1,
    main_AutoGlyph_2_out_1,
    main_Normals_1_out_1,
    main_Compute_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Color[5]: x = 450, y = 303, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0 1 0]
    //
main_Color_5_out_1 = 
    Color(
    main_Import_2_out_1,
    main_Color_5_in_2,
    main_Color_5_in_3,
    main_Color_5_in_4,
    main_Color_5_in_5
    ) [instance: 5, cache: 1];
    // 
    // node Normals[2]: x = 529, y = 380, inputs = 2, label = Normals
    //
main_Normals_2_out_1 = 
    Normals(
    main_Color_5_out_1,
    main_Normals_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Collect[3]: x = 492, y = 581, inputs = 4, label = Collect
    //
main_Collect_3_out_1 = 
    Collect(
    main_AutoGlyph_6_out_1,
    main_AutoGlyph_3_out_1,
    main_Normals_2_out_1,
    main_Compute_1_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Color[6]: x = 776, y = 309, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0 0 1]
    //
main_Color_6_out_1 = 
    Color(
    main_Import_3_out_1,
    main_Color_6_in_2,
    main_Color_6_in_3,
    main_Color_6_in_4,
    main_Color_6_in_5
    ) [instance: 6, cache: 1];
    // 
    // node Normals[3]: x = 803, y = 385, inputs = 2, label = Normals
    //
main_Normals_3_out_1 = 
    Normals(
    main_Color_6_out_1,
    main_Normals_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Collect[4]: x = 759, y = 594, inputs = 4, label = Collect
    //
main_Collect_4_out_1 = 
    Collect(
    main_AutoGlyph_7_out_1,
    main_AutoGlyph_4_out_1,
    main_Normals_3_out_1,
    main_Compute_1_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Image[3]: x = 202, y = 708, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_3"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.000487522 0.000522974 0.000662259]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [0.000487522 0.000522974 0.0131358]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.00668457
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 813
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.756
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "/home/tass/2014/dx/te/slowest"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff"
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "panzoom"
    // depth: value = 24
    // window: position = (   inf,  -nan), size =    infx   inf
    // internal caching: 1
    //
main_Image_3_out_1,
main_Image_3_out_2,
main_Image_3_out_3 = 
    Image(
    main_Image_3_in_1,
    main_Collect_2_out_1,
    main_Image_3_in_3,
    main_Image_3_in_4,
    main_Image_3_in_5,
    main_Image_3_in_6,
    main_Image_3_in_7,
    main_Image_3_in_8,
    main_Image_3_in_9,
    main_Image_3_in_10,
    main_Image_3_in_11,
    main_Image_3_in_12,
    main_Image_3_in_13,
    main_Image_3_in_14,
    main_Image_3_in_15,
    main_Image_3_in_16,
    main_Image_3_in_17,
    main_Image_3_in_18,
    main_Image_3_in_19,
    main_Image_3_in_20,
    main_Image_3_in_21,
    main_Image_3_in_22,
    main_Image_3_in_23,
    main_Image_3_in_24,
    main_Image_3_in_25,
    main_Image_3_in_26,
    main_Image_3_in_27,
    main_Image_3_in_28,
    main_Image_3_in_29,
    main_Image_3_in_30,
    main_Image_3_in_31,
    main_Image_3_in_32,
    main_Image_3_in_33,
    main_Image_3_in_34,
    main_Image_3_in_35,
    main_Image_3_in_36,
    main_Image_3_in_37,
    main_Image_3_in_38,
    main_Image_3_in_39,
    main_Image_3_in_40,
    main_Image_3_in_41,
    main_Image_3_in_42,
    main_Image_3_in_43,
    main_Image_3_in_44,
    main_Image_3_in_45,
    main_Image_3_in_46,
    main_Image_3_in_47,
    main_Image_3_in_48,
    main_Image_3_in_49
    ) [instance: 3, cache: 1];
    // 
    // node Image[4]: x = 467, y = 701, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_4"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [1.46088e-05 1.94199e-05 0.000829443]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [0.000211431 0.00135434 0.0121668]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.00298156
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 669
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.962
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.0192868 0.992916 -0.117246]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 14.8782
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "/home/tass/2014/dx/te/medium"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff"
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "panzoom"
    // depth: value = 24
    // window: position = (0.2723,0.0221), size = 0.5000x0.8906, screen = 0
    // internal caching: 1
    //
main_Image_4_out_1,
main_Image_4_out_2,
main_Image_4_out_3 = 
    Image(
    main_Image_4_in_1,
    main_Collect_3_out_1,
    main_Image_4_in_3,
    main_Image_4_in_4,
    main_Image_4_in_5,
    main_Image_4_in_6,
    main_Image_4_in_7,
    main_Image_4_in_8,
    main_Image_4_in_9,
    main_Image_4_in_10,
    main_Image_4_in_11,
    main_Image_4_in_12,
    main_Image_4_in_13,
    main_Image_4_in_14,
    main_Image_4_in_15,
    main_Image_4_in_16,
    main_Image_4_in_17,
    main_Image_4_in_18,
    main_Image_4_in_19,
    main_Image_4_in_20,
    main_Image_4_in_21,
    main_Image_4_in_22,
    main_Image_4_in_23,
    main_Image_4_in_24,
    main_Image_4_in_25,
    main_Image_4_in_26,
    main_Image_4_in_27,
    main_Image_4_in_28,
    main_Image_4_in_29,
    main_Image_4_in_30,
    main_Image_4_in_31,
    main_Image_4_in_32,
    main_Image_4_in_33,
    main_Image_4_in_34,
    main_Image_4_in_35,
    main_Image_4_in_36,
    main_Image_4_in_37,
    main_Image_4_in_38,
    main_Image_4_in_39,
    main_Image_4_in_40,
    main_Image_4_in_41,
    main_Image_4_in_42,
    main_Image_4_in_43,
    main_Image_4_in_44,
    main_Image_4_in_45,
    main_Image_4_in_46,
    main_Image_4_in_47,
    main_Image_4_in_48,
    main_Image_4_in_49
    ) [instance: 4, cache: 1];
    // 
    // node Image[5]: x = 734, y = 714, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_5"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.000204174 0.000314327 0.000674513]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [0.00285813 0.00357109 0.00901915]
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 0.00115349
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 730
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.838
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.0704028 0.92411 -0.375585]
    // input[11]: defaulting = 0, visible = 0, type = 5, value = 7.06517
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[25]: defaulting = 0, visible = 0, type = 32, value = "/home/tass/2014/dx/te/fastest"
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "tiff"
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "panzoom"
    // depth: value = 24
    // window: position = (0.2430,0.0977), size = 0.5447x0.8490, screen = 0
    // internal caching: 1
    //
main_Image_5_out_1,
main_Image_5_out_2,
main_Image_5_out_3 = 
    Image(
    main_Image_5_in_1,
    main_Collect_4_out_1,
    main_Image_5_in_3,
    main_Image_5_in_4,
    main_Image_5_in_5,
    main_Image_5_in_6,
    main_Image_5_in_7,
    main_Image_5_in_8,
    main_Image_5_in_9,
    main_Image_5_in_10,
    main_Image_5_in_11,
    main_Image_5_in_12,
    main_Image_5_in_13,
    main_Image_5_in_14,
    main_Image_5_in_15,
    main_Image_5_in_16,
    main_Image_5_in_17,
    main_Image_5_in_18,
    main_Image_5_in_19,
    main_Image_5_in_20,
    main_Image_5_in_21,
    main_Image_5_in_22,
    main_Image_5_in_23,
    main_Image_5_in_24,
    main_Image_5_in_25,
    main_Image_5_in_26,
    main_Image_5_in_27,
    main_Image_5_in_28,
    main_Image_5_in_29,
    main_Image_5_in_30,
    main_Image_5_in_31,
    main_Image_5_in_32,
    main_Image_5_in_33,
    main_Image_5_in_34,
    main_Image_5_in_35,
    main_Image_5_in_36,
    main_Image_5_in_37,
    main_Image_5_in_38,
    main_Image_5_in_39,
    main_Image_5_in_40,
    main_Image_5_in_41,
    main_Image_5_in_42,
    main_Image_5_in_43,
    main_Image_5_in_44,
    main_Image_5_in_45,
    main_Image_5_in_46,
    main_Image_5_in_47,
    main_Image_5_in_48,
    main_Image_5_in_49
    ) [instance: 5, cache: 1];
// network: end of macro body
CacheScene(main_Image_3_in_1, main_Image_3_out_1, main_Image_3_out_2);
CacheScene(main_Image_4_in_1, main_Image_4_out_1, main_Image_4_out_2);
CacheScene(main_Image_5_in_1, main_Image_5_out_1, main_Image_5_out_2);
}
main_FileSelector_1_out_1 = "/home/tass/2014/dx/te/te_pol_1.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_AutoGlyph_2_in_2 = NULL;
main_AutoGlyph_2_in_3 = NULL;
main_AutoGlyph_2_in_4 = NULL;
main_AutoGlyph_2_in_5 = NULL;
main_AutoGlyph_2_in_6 = -1.0;
main_AutoGlyph_2_in_7 = 2.0;
main_AutoGlyph_2_out_1 = NULL;
main_FileSelector_2_out_1 = "/home/tass/2014/dx/te/te_pol_2.dx";
main_Import_2_in_2 = NULL;
main_Import_2_in_3 = NULL;
main_Import_2_in_4 = NULL;
main_Import_2_in_5 = NULL;
main_Import_2_in_6 = NULL;
main_Import_2_out_1 = NULL;
main_AutoGlyph_3_in_2 = NULL;
main_AutoGlyph_3_in_3 = NULL;
main_AutoGlyph_3_in_4 = NULL;
main_AutoGlyph_3_in_5 = NULL;
main_AutoGlyph_3_in_6 = -1.0;
main_AutoGlyph_3_in_7 = 2.0;
main_AutoGlyph_3_out_1 = NULL;
main_FileSelector_3_out_1 = "/home/tass/2014/dx/te/te_pol_3.dx";
main_Import_3_in_2 = NULL;
main_Import_3_in_3 = NULL;
main_Import_3_in_4 = NULL;
main_Import_3_in_5 = NULL;
main_Import_3_in_6 = NULL;
main_Import_3_out_1 = NULL;
main_AutoGlyph_4_in_2 = NULL;
main_AutoGlyph_4_in_3 = NULL;
main_AutoGlyph_4_in_4 = NULL;
main_AutoGlyph_4_in_5 = NULL;
main_AutoGlyph_4_in_6 = -1.0;
main_AutoGlyph_4_in_7 = 2.0;
main_AutoGlyph_4_out_1 = NULL;
main_Compute_2_in_1 = "-$0";
main_Compute_2_out_1 = NULL;
main_AutoGlyph_5_in_2 = NULL;
main_AutoGlyph_5_in_3 = NULL;
main_AutoGlyph_5_in_4 = NULL;
main_AutoGlyph_5_in_5 = NULL;
main_AutoGlyph_5_in_6 = -1.0;
main_AutoGlyph_5_in_7 = 2.0;
main_AutoGlyph_5_out_1 = NULL;
main_Compute_3_in_1 = "-$0";
main_Compute_3_out_1 = NULL;
main_AutoGlyph_6_in_2 = NULL;
main_AutoGlyph_6_in_3 = NULL;
main_AutoGlyph_6_in_4 = NULL;
main_AutoGlyph_6_in_5 = NULL;
main_AutoGlyph_6_in_6 = -1.0;
main_AutoGlyph_6_in_7 = 2.0;
main_AutoGlyph_6_out_1 = NULL;
main_Compute_4_in_1 = "-$0";
main_Compute_4_out_1 = NULL;
main_AutoGlyph_7_in_2 = NULL;
main_AutoGlyph_7_in_3 = NULL;
main_AutoGlyph_7_in_4 = NULL;
main_AutoGlyph_7_in_5 = NULL;
main_AutoGlyph_7_in_6 = -1.0;
main_AutoGlyph_7_in_7 = 2.0;
main_AutoGlyph_7_out_1 = NULL;
main_FileSelector_4_out_1 = "/home/tass/2014/dx/coordinate_system.dx";
main_Import_4_in_2 = NULL;
main_Import_4_in_3 = NULL;
main_Import_4_in_4 = NULL;
main_Import_4_in_5 = NULL;
main_Import_4_in_6 = NULL;
main_Import_4_out_1 = NULL;
main_Normals_4_in_2 = NULL;
main_Normals_4_out_1 = NULL;
main_Select_1_in_2 = "x bar";
main_Select_1_in_3 = NULL;
main_Select_1_out_1 = NULL;
main_Color_1_in_2 = [1 0.5 0];
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Select_2_in_2 = "y bar";
main_Select_2_in_3 = NULL;
main_Select_2_out_1 = NULL;
main_Color_2_in_2 = [0 1 0];
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Select_3_in_2 = "z bar";
main_Select_3_in_3 = NULL;
main_Select_3_out_1 = NULL;
main_Color_3_in_2 = [0 0 1];
main_Color_3_in_3 = NULL;
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Color_3_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_Color_4_in_2 = [1 0 0];
main_Color_4_in_3 = NULL;
main_Color_4_in_4 = NULL;
main_Color_4_in_5 = NULL;
main_Color_4_out_1 = NULL;
main_Normals_1_in_2 = NULL;
main_Normals_1_out_1 = NULL;
main_Scale_1_in_2 = [0.0002 0.0002 0.0002];
main_Scale_1_out_1 = NULL;
main_Compute_1_in_1 = "$0";
main_Compute_1_out_1 = NULL;
main_Collect_2_out_1 = NULL;
main_Color_5_in_2 = [0 1 0];
main_Color_5_in_3 = NULL;
main_Color_5_in_4 = NULL;
main_Color_5_in_5 = NULL;
main_Color_5_out_1 = NULL;
main_Normals_2_in_2 = NULL;
main_Normals_2_out_1 = NULL;
main_Collect_3_out_1 = NULL;
main_Color_6_in_2 = [0 0 1];
main_Color_6_in_3 = NULL;
main_Color_6_in_4 = NULL;
main_Color_6_in_5 = NULL;
main_Color_6_out_1 = NULL;
main_Normals_3_in_2 = NULL;
main_Normals_3_out_1 = NULL;
main_Collect_4_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_3_in_1 = "Image_3";
main_Image_3_in_3 = "X24,,";
main_Image_3_in_4 = 1;
main_Image_3_in_5 = [0.000487522 0.000522974 0.000662259];
main_Image_3_in_6 = [0.000487522 0.000522974 0.0131358];
main_Image_3_in_7 = 0.00668457;
main_Image_3_in_8 = 813;
main_Image_3_in_9 = 0.756;
main_Image_3_in_10 = [0 1 0];
main_Image_3_in_11 = NULL;
main_Image_3_in_12 = 0;
main_Image_3_in_13 = NULL;
main_Image_3_in_14 = 1;
main_Image_3_in_15 = NULL;
main_Image_3_in_16 = NULL;
main_Image_3_in_17 = NULL;
main_Image_3_in_18 = NULL;
main_Image_3_in_19 = 0;
main_Image_3_in_20 = NULL;
main_Image_3_in_21 = NULL;
main_Image_3_in_22 = NULL;
main_Image_3_in_23 = NULL;
main_Image_3_in_25 = "/home/tass/2014/dx/te/slowest";
main_Image_3_in_26 = "tiff";
main_Image_3_in_27 = NULL;
main_Image_3_in_28 = NULL;
main_Image_3_in_29 = NULL;
main_Image_3_in_30 = NULL;
main_Image_3_in_31 = NULL;
main_Image_3_in_32 = NULL;
main_Image_3_in_33 = NULL;
main_Image_3_in_34 = NULL;
main_Image_3_in_35 = NULL;
main_Image_3_in_36 = NULL;
main_Image_3_in_37 = NULL;
main_Image_3_in_38 = NULL;
main_Image_3_in_39 = NULL;
main_Image_3_in_40 = NULL;
main_Image_3_in_41 = "panzoom";
main_Image_3_in_42 = NULL;
main_Image_3_in_43 = NULL;
main_Image_3_in_44 = NULL;
main_Image_3_in_45 = NULL;
main_Image_3_in_46 = NULL;
main_Image_3_in_47 = NULL;
main_Image_3_in_48 = NULL;
main_Image_3_in_49 = NULL;
main_Image_4_in_1 = "Image_4";
main_Image_4_in_3 = "X24,,";
main_Image_4_in_4 = 1;
main_Image_4_in_5 = [1.46088e-05 1.94199e-05 0.000829443];
main_Image_4_in_6 = [0.000211431 0.00135434 0.0121668];
main_Image_4_in_7 = 0.00298156;
main_Image_4_in_8 = 669;
main_Image_4_in_9 = 0.962;
main_Image_4_in_10 = [0.0192868 0.992916 -0.117246];
main_Image_4_in_11 = NULL;
main_Image_4_in_12 = 0;
main_Image_4_in_13 = NULL;
main_Image_4_in_14 = 1;
main_Image_4_in_15 = NULL;
main_Image_4_in_16 = NULL;
main_Image_4_in_17 = NULL;
main_Image_4_in_18 = NULL;
main_Image_4_in_19 = 0;
main_Image_4_in_20 = NULL;
main_Image_4_in_21 = NULL;
main_Image_4_in_22 = NULL;
main_Image_4_in_23 = NULL;
main_Image_4_in_25 = "/home/tass/2014/dx/te/medium";
main_Image_4_in_26 = "tiff";
main_Image_4_in_27 = NULL;
main_Image_4_in_28 = NULL;
main_Image_4_in_29 = NULL;
main_Image_4_in_30 = NULL;
main_Image_4_in_31 = NULL;
main_Image_4_in_32 = NULL;
main_Image_4_in_33 = NULL;
main_Image_4_in_34 = NULL;
main_Image_4_in_35 = NULL;
main_Image_4_in_36 = NULL;
main_Image_4_in_37 = NULL;
main_Image_4_in_38 = NULL;
main_Image_4_in_39 = NULL;
main_Image_4_in_40 = NULL;
main_Image_4_in_41 = "panzoom";
main_Image_4_in_42 = NULL;
main_Image_4_in_43 = NULL;
main_Image_4_in_44 = NULL;
main_Image_4_in_45 = NULL;
main_Image_4_in_46 = NULL;
main_Image_4_in_47 = NULL;
main_Image_4_in_48 = NULL;
main_Image_4_in_49 = NULL;
main_Image_5_in_1 = "Image_5";
main_Image_5_in_3 = "X24,,";
main_Image_5_in_4 = 1;
main_Image_5_in_5 = [0.000204174 0.000314327 0.000674513];
main_Image_5_in_6 = [0.00285813 0.00357109 0.00901915];
main_Image_5_in_7 = NULL;
main_Image_5_in_8 = 730;
main_Image_5_in_9 = 0.838;
main_Image_5_in_10 = [-0.0704028 0.92411 -0.375585];
main_Image_5_in_11 = 7.06517;
main_Image_5_in_12 = 1;
main_Image_5_in_13 = NULL;
main_Image_5_in_14 = 1;
main_Image_5_in_15 = NULL;
main_Image_5_in_16 = NULL;
main_Image_5_in_17 = NULL;
main_Image_5_in_18 = NULL;
main_Image_5_in_19 = 0;
main_Image_5_in_20 = NULL;
main_Image_5_in_21 = NULL;
main_Image_5_in_22 = NULL;
main_Image_5_in_23 = NULL;
main_Image_5_in_25 = "/home/tass/2014/dx/te/fastest";
main_Image_5_in_26 = "tiff";
main_Image_5_in_27 = NULL;
main_Image_5_in_28 = NULL;
main_Image_5_in_29 = NULL;
main_Image_5_in_30 = NULL;
main_Image_5_in_31 = NULL;
main_Image_5_in_32 = NULL;
main_Image_5_in_33 = NULL;
main_Image_5_in_34 = NULL;
main_Image_5_in_35 = NULL;
main_Image_5_in_36 = NULL;
main_Image_5_in_37 = NULL;
main_Image_5_in_38 = NULL;
main_Image_5_in_39 = NULL;
main_Image_5_in_40 = NULL;
main_Image_5_in_41 = "panzoom";
main_Image_5_in_42 = NULL;
main_Image_5_in_43 = NULL;
main_Image_5_in_44 = NULL;
main_Image_5_in_45 = NULL;
main_Image_5_in_46 = NULL;
main_Image_5_in_47 = NULL;
main_Image_5_in_48 = NULL;
main_Image_5_in_49 = NULL;
Executive("product version 4 4 4");
$sync
main();
